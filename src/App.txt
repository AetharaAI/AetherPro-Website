import React from 'react';
import { Routes, Route, Navigate } from 'react-router-dom';
import { useAuth } from './contexts/AuthContext';
import Navbar from './components/Navbar';
import Footer from './components/Footer';
import HomePage from './pages/HomePage';
import DocsPage from './pages/DocsPage';
import PricingPage from './pages/PricingPage';
import LoginPage from './pages/LoginPage';
import SignupPage from './pages/SignupPage';
import DashboardPage from './pages/DashboardPage';
import ApiKeysPage from './pages/ApiKeysPage';
import ConsolePage from './pages/ConsolePage';
import AuthCallbackPage from './pages/AuthCallbackPage';
import ProtectedRoute from './components/ProtectedRoute';
import LoadingSpinner from './components/LoadingSpinner';

// Temporary debug component - remove in production
const AuthDebug: React.FC = () => {
  const { user, token, isAuthenticated, loading } = useAuth();

  // Only show in development
  if (process.env.NODE_ENV !== 'development') {
    return null;
  }

  return (
    <div className="fixed bottom-4 right-4 bg-black bg-opacity-80 text-white p-3 rounded-lg text-xs font-mono max-w-sm z-50">
      <div className="mb-2 font-bold text-yellow-400">üîç Auth Debug</div>
      <div className="space-y-1">
        <div>
          <span className="text-blue-300">Loading:</span> {loading ? '‚úÖ True' : '‚ùå False'}
        </div>
        <div>
          <span className="text-blue-300">Authenticated:</span> {isAuthenticated ? '‚úÖ True' : '‚ùå False'}
        </div>
        <div>
          <span className="text-blue-300">Token:</span> {token ? `${token.substring(0, 15)}...` : '‚ùå None'}
        </div>
        <div>
          <span className="text-blue-300">User:</span> {user ? `${user.name} (${user.email})` : '‚ùå None'}
        </div>
        <div>
          <span className="text-blue-300">LocalStorage Token:</span> {localStorage.getItem('jwt_token') ? '‚úÖ Present' : '‚ùå Missing'}
        </div>
        <div>
          <span className="text-blue-300">LocalStorage User:</span> {localStorage.getItem('user') ? '‚úÖ Present' : '‚ùå Missing'}
        </div>
      </div>
    </div>
  );
};

function App() {
  const { user, isAuthenticated, loading } = useAuth();

  // Debug logging - remove in production
  console.log('üîç App Auth State:', { user: !!user, isAuthenticated, loading });

  if (loading) {
    return (
      <div className="min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center">
        <div className="text-center">
          <LoadingSpinner size="lg" />
          <p className="mt-4 text-gray-600 dark:text-gray-400">Loading...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50 dark:bg-gray-900 flex flex-col">
      <Navbar />
      <main className="flex-1">
        <Routes>
          <Route path="/" element={<HomePage />} />
          <Route path="/docs" element={<DocsPage />} />
          <Route path="/pricing" element={<PricingPage />} />
          <Route 
            path="/login" 
            element={isAuthenticated ? <Navigate to="/dashboard" replace /> : <LoginPage />} 
          />
          <Route 
            path="/signup" 
            element={isAuthenticated ? <Navigate to="/dashboard" replace /> : <SignupPage />} 
          />
          <Route 
            path="/auth/callback" 
            element={<AuthCallbackPage />} 
          />
          <Route
            path="/dashboard"
            element={
              <ProtectedRoute>
                <DashboardPage />
              </ProtectedRoute>
            }
          />
          <Route
            path="/account/api-keys"
            element={
              <ProtectedRoute>
                <ApiKeysPage />
              </ProtectedRoute>
            }
          />
          <Route
            path="/console"
            element={
              <ProtectedRoute>
                <ConsolePage />
              </ProtectedRoute>
            }
          />
        </Routes>
      </main>
      <Footer />
      
      {/* Temporary debug component - remove in production */}
      <AuthDebug />
    </div>
  );
}

export default App;